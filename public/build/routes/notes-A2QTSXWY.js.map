{
  "version": 3,
  "sources": ["../../../app/routes/notes.jsx", "../../../app/components/NewNote.jsx", "../../../app/components/Notelist.jsx"],
  "sourcesContent": ["import { Link, useCatch, useLoaderData } from '@remix-run/react';\r\nimport NewNote, { links as NewNoteLinks } from '../components/NewNote';\r\nimport Notelist, { links as NotelistLinks } from '../components/Notelist';\r\nimport { getStoredNotes, storeNotes } from '../data/notes';\r\nimport { json, redirect } from '@remix-run/node';\r\n\r\nexport function links() {\r\n    return [...NewNoteLinks(), ...NotelistLinks()];\r\n}\r\n\r\nexport function meta() {\r\n    return {\r\n        title: \"All notes\",\r\n        description: \"A better way of keeping track of your notes\",\r\n    }\r\n}\r\nexport default function NotesPage() {\r\n    const notes = useLoaderData();\r\n\r\n    return (\r\n        <main id=\"content\">\r\n            <NewNote />\r\n            <Notelist notes={notes} />\r\n        </main>\r\n    );\r\n}\r\n\r\nexport async function loader() {\r\n    const notes = await getStoredNotes();\r\n    if (!notes || notes.length === 0) {\r\n        throw json(\r\n            { message: 'Could not find any notes' },\r\n            { status: 404 },\r\n            { statusText: 'Could not find any notes' }\r\n        );\r\n    }\r\n    return notes\r\n}\r\n\r\nexport async function action({ request }) {\r\n    const formData = await request.formData();\r\n    // const noteData = {\r\n    //     title: formData.get('title'),\r\n    //     content: formData.get('content'),\r\n    // };  \r\n\r\n    const noteData = Object.fromEntries(formData);\r\n\r\n    if (noteData.title.trim().length < 5) {\r\n        return { message: 'Invalid title -  Title must be at least 5 characters' };\r\n    }\r\n\r\n    const existingNotes = await getStoredNotes();\r\n    noteData.id = new Date().toISOString();\r\n    const updatedNotes = existingNotes.concat(noteData);\r\n    await storeNotes(updatedNotes);\r\n    // await new Promise((resolve, reject) => setTimeout(() => resolve(), 2000))\r\n\r\n    return redirect('/notes');\r\n}\r\n\r\nexport function CatchBoundary() {\r\n    const caughtResponse = useCatch();\r\n\r\n    const message = caughtResponse.data?.message || 'Data not found';\r\n\r\n    return (\r\n        <main>\r\n            <NewNote />\r\n            <p className=\"info-message\">\r\n                {message}\r\n            </p>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport function ErrorBoundary({ error }) {\r\n    return (\r\n        <main className=\"error\">\r\n            <h1>An error occurred here</h1>\r\n            <p>\r\n                {error.message}\r\n            </p>\r\n            <p>\r\n                Back to <Link to=\"/\">Home</Link>\r\n            </p>\r\n        </main>\r\n    )\r\n}", "import { Form, useActionData, useNavigation } from '@remix-run/react';\nimport styles from '../components/NewNote.css';\n\nfunction NewNote() {\n  const data = useActionData();\n  const navigation = useNavigation();\n\n\n  const isSubmitting = navigation.state === 'submitting';\n\n  return (\n    <Form method=\"post\" id=\"note-form\">\n      {data?.message && <p>{data.message}</p>}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input type=\"text\" id=\"title\" name=\"title\" required />\n      </p>\n      <p>\n        <label htmlFor=\"content\">Content</label>\n        <textarea id=\"content\" name=\"content\" rows=\"5\" required />\n      </p>\n      <div className=\"form-actions\">\n        <button disabled={isSubmitting}>\n          {isSubmitting ? 'Submitting...' : 'Add Note'}\n        </button>\n      </div>\n    </Form>);\n\n}\n\nexport default NewNote;\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }];\n}", "import { Link } from '@remix-run/react';\nimport styles from './NoteList.css';\n\nfunction NoteList({ notes }) {\n  return (\n    <ul id=\"note-list\">\n      {notes.map((note, index) =>\n      <li key={note.id} className=\"note\">\n          <Link to={note.id}>\n            <article>\n              <header>\n                <ul className=\"note-meta\">\n                  <li>#{index + 1}</li>\n                  <li>\n                    <time dateTime={note.id}>\n                      {new Date(note.id).toLocaleDateString('en-US', {\n                      day: 'numeric',\n                      month: 'short',\n                      year: 'numeric',\n                      hour: '2-digit',\n                      minute: '2-digit'\n                    })}\n                    </time>\n                  </li>\n                </ul>\n                <h2>{note.title}</h2>\n              </header>\n              <p>{note.content}</p>\n            </article>\n          </Link>\n        </li>\n      )}\n    </ul>);\n\n}\n\nexport default NoteList;\n\n\n\nexport function links() {\n  return [{ rel: 'stylesheet', href: styles }];\n}"],
  "mappings": ";;;;;;;;;;;;;;;;AAAA;;;ACAA;;;;;;AAYwB;AATxB,SAAS,UAAU;AACjB,QAAM,OAAO,cAAc;AAC3B,QAAM,aAAa,cAAc;AAGjC,QAAM,eAAe,WAAW,UAAU;AAE1C,SACE,mDAAC,QAAK,QAAO,QAAO,IAAG,aACpB;AAAA,UAAM,WAAW,mDAAC,OAAG,eAAK,WAAT;AAAA;AAAA;AAAA;AAAA,WAAiB;AAAA,IACnC,mDAAC,OACC;AAAA,yDAAC,WAAM,SAAQ,SAAQ,qBAAvB;AAAA;AAAA;AAAA;AAAA,aAA4B;AAAA,MAC5B,mDAAC,WAAM,MAAK,QAAO,IAAG,SAAQ,MAAK,SAAQ,UAAQ,QAAnD;AAAA;AAAA;AAAA;AAAA,aAAoD;AAAA,SAFtD;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,OACC;AAAA,yDAAC,WAAM,SAAQ,WAAU,uBAAzB;AAAA;AAAA;AAAA;AAAA,aAAgC;AAAA,MAChC,mDAAC,cAAS,IAAG,WAAU,MAAK,WAAU,MAAK,KAAI,UAAQ,QAAvD;AAAA;AAAA;AAAA;AAAA,aAAwD;AAAA,SAF1D;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,SAAI,WAAU,gBACb,6DAAC,YAAO,UAAU,cACf,yBAAe,kBAAkB,cADpC;AAAA;AAAA;AAAA;AAAA,WAEA,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,OAdF;AAAA;AAAA;AAAA;AAAA,SAeA;AAEJ;AAEA,IAAOA,mBAAQ;AAER,SAAS,QAAQ;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,gBAAO,CAAC;AAC7C;;;AClCA;;;;;;AAYkB,IAAAC,0BAAA;AATlB,SAAS,SAAS,EAAE,MAAM,GAAG;AAC3B,SACE,oDAAC,QAAG,IAAG,aACJ,gBAAM;AAAA,IAAI,CAAC,MAAM,UAClB,oDAAC,QAAiB,WAAU,QACxB,8DAAC,QAAK,IAAI,KAAK,IACb,8DAAC,aACC;AAAA,0DAAC,YACC;AAAA,4DAAC,QAAG,WAAU,aACZ;AAAA,8DAAC,QAAG;AAAA;AAAA,YAAE,QAAQ;AAAA,eAAd;AAAA;AAAA;AAAA;AAAA,iBAAgB;AAAA,UAChB,oDAAC,QACC,8DAAC,UAAK,UAAU,KAAK,IAClB,cAAI,KAAK,KAAK,EAAE,EAAE,mBAAmB,SAAS;AAAA,YAC/C,KAAK;AAAA,YACL,OAAO;AAAA,YACP,MAAM;AAAA,YACN,MAAM;AAAA,YACN,QAAQ;AAAA,UACV,CAAC,KAPD;AAAA;AAAA;AAAA;AAAA,iBAQA,KATF;AAAA;AAAA;AAAA;AAAA,iBAUA;AAAA,aAZF;AAAA;AAAA;AAAA;AAAA,eAaA;AAAA,QACA,oDAAC,QAAI,eAAK,SAAV;AAAA;AAAA;AAAA;AAAA,eAAgB;AAAA,WAflB;AAAA;AAAA;AAAA;AAAA,aAgBA;AAAA,MACA,oDAAC,OAAG,eAAK,WAAT;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,SAlBnB;AAAA;AAAA;AAAA;AAAA,WAmBA,KApBF;AAAA;AAAA;AAAA;AAAA,WAqBA,KAtBK,KAAK,IAAd;AAAA;AAAA;AAAA;AAAA,WAuBE;AAAA,EACF,KA1BF;AAAA;AAAA;AAAA;AAAA,SA2BA;AAEJ;AAEA,IAAO,mBAAQ;AAIR,SAASC,SAAQ;AACtB,SAAO,CAAC,EAAE,KAAK,cAAc,MAAM,iBAAO,CAAC;AAC7C;;;AFtCA,kBAA+B;AAiBnB,IAAAC,0BAAA;AAfL,SAASC,SAAQ;AACpB,SAAO,CAAC,GAAG,MAAa,GAAG,GAAGA,OAAc,CAAC;AACjD;AAEO,SAAS,OAAO;AACnB,SAAO;AAAA,IACH,OAAO;AAAA,IACP,aAAa;AAAA,EACjB;AACJ;AACe,SAAR,YAA6B;AAChC,QAAM,QAAQ,cAAc;AAE5B,SACI,oDAAC,UAAK,IAAG,WACL;AAAA,wDAACC,kBAAA,IAAD;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,oDAAC,oBAAS,SAAV;AAAA;AAAA;AAAA;AAAA,WAAwB;AAAA,OAF5B;AAAA;AAAA;AAAA;AAAA,SAGA;AAER;AAoCO,SAAS,gBAAgB;AAC5B,QAAM,iBAAiB,SAAS;AAEhC,QAAM,UAAU,eAAe,MAAM,WAAW;AAEhD,SACI,oDAAC,UACG;AAAA,wDAACC,kBAAA,IAAD;AAAA;AAAA;AAAA;AAAA,WAAS;AAAA,IACT,oDAAC,OAAE,WAAU,gBACR,qBADL;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAJJ;AAAA;AAAA;AAAA;AAAA,SAKA;AAER;AAEO,SAAS,cAAc,EAAE,MAAM,GAAG;AACrC,SACI,oDAAC,UAAK,WAAU,SACZ;AAAA,wDAAC,QAAG,sCAAJ;AAAA;AAAA;AAAA;AAAA,WAA0B;AAAA,IAC1B,oDAAC,OACI,gBAAM,WADX;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACA,oDAAC,OAAE;AAAA;AAAA,MACS,oDAAC,QAAK,IAAG,KAAI,oBAAb;AAAA;AAAA;AAAA;AAAA,aAAiB;AAAA,SAD7B;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAPJ;AAAA;AAAA;AAAA;AAAA,SAQA;AAER;",
  "names": ["NewNote_default", "import_jsx_dev_runtime", "links", "import_jsx_dev_runtime", "links", "NewNote_default", "NewNote_default"]
}
